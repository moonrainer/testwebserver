#!/bin/bash -e
#
# S2I assemble script for the 'openunison-centos7' image.
# The 'assemble' script builds your application source so that it is ready to run.
#
# For more information refer to the documentation:
#	https://github.com/openshift/source-to-image/blob/master/docs/builder_image.md
#



if [[ "$1" == "-h" ]]; then
	# If the 'openunison-centos7' assemble script is executed with '-h' flag,
	# print the usage.
	exec /usr/libexec/s2i/usage
fi


function setup_webapps() {
	export OPENUNISON_DIR=/usr/local/openunison
	export OPENUNISON_WORK=$OPENUNISON_DIR/work

	echo "Copying war file..."
  warFileName=`find /tmp/src -type f -name *.war -print`

	cp $warFileName /usr/local/openunison/war/openunison.war

	echo "Creating $OPENUNISON_WORK"
	mkdir -p $OPENUNISON_WORK/webapp
	mv $OPENUNISON_DIR/war/openunison.war $OPENUNISON_WORK/webapp/
	cd $OPENUNISON_WORK/webapp
	unzip $(ls *.war) > /dev/null

	rm -f $OPENUNISON_WORK/webapp/*.war
	mv $OPENUNISON_WORK/webapp/WEB-INF/lib $OPENUNISON_WORK/
	mv $OPENUNISON_WORK/webapp/WEB-INF/classes $OPENUNISON_WORK/
	mkdir $OPENUNISON_WORK/logs





	echo "Removing source..."
	rm -rf /tmp/src

	echo "Removing maven repo..."
	rm -rf /usr/local/tremolo-service/.m2

	echo "Removing maven..."
	rm -rf /usr/local/apache-maven-$MAVEN_VERSION/*

}


echo "Looking for OpenUnison war file or pom.xml..."
#numWarFiles=`find /tmp/src -maxdepth 1 -type f -iname *.war -print | wc -l`
numWarFiles=`find /tmp/src/ -type f -name *.war -print | wc -l`
echo "numWarFiles: $numWarFiles"
if [ $numWarFiles -eq 1 ]; then
  echo "Found OpenUnison war file. Deploying..."
  setup_webapps
elif [ -f "/tmp/src/pom.xml" ]; then
# If a pom.xml is present, this is a normal build scenario so run maven.
  echo "Found pom.xml... attempting to build with 'mvn ${MAVEN_ARGS}'"

	echo -e "\nInstalling Maven $MAVEN_VERSION"
	mkdir /usr/local/openunison/build
	curl -v http://www.apache.org/dist/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz | tar -zx -C /usr/local/openunison/build


  if [ -z "$MAVEN_ARGS" ]; then
    export MAVEN_ARGS="package"
  fi
  if [ -z "$MAVEN_ARGS_APPEND" ]; then
    export MAVEN_ARGS="$MAVEN_ARGS $MAVEN_ARGS_APPEND -DskipPackages"
  fi

  echo "Maven Remote Cert : $MVN_REMOTE_CERT"
	export MAVEN_OPTS="$MAVEN_OPTS "
	if [[ -v MVN_REMOTE_CERT ]]; then
		echo "unpacking cert"
		echo $MVN_REMOTE_CERT | base64 -d > /tmp/cert.pem
		cat /tmp/cert.pem
		echo "importing cert"
		keytool -import -trustcacerts -noprompt -file /tmp/cert.pem -rfc -alias remote-nexus -storepass changeit -storetype JKS -v -keystore /tmp/cacerts
		keytool -importkeystore -srckeystore /usr/lib/jvm/jre/lib/security/cacerts -srcstorepass changeit -destkeystore /tmp/cacerts -deststorepass changeit -v
		echo "Setting MAVEN_ARGS"
		export MAVEN_OPTS="$MAVEN_OPTS -Djavax.net.ssl.trustStore=/tmp/cacerts -Djavax.net.ssl.trustStorePassword=changeit"
		echo "maven args - $MAVEN_OPTS"
	fi

  cd /tmp/src
  /usr/local/openunison/build/apache-maven-${MAVEN_VERSION}/bin/mvn --version
  echo "MAVEN_ARGS: $MAVEN_ARGS"
  /usr/local/openunison/build/apache-maven-${MAVEN_VERSION}/bin/mvn $MAVEN_ARGS

  ERR=$?
  if [ $ERR -ne 0 ]; then
    echo "Aborting due to error code $ERR from mvn package"
    exit $ERR
  fi

  echo "Deleting build artifacts"
	rm -rf ~/.m2
	rm -rf /usr/local/openunison/build

  setup_webapps
else
  echo "ERROR: No war file or pom.xml file found. Quitting."
  exit 1
fi

echo "Done."
exit
